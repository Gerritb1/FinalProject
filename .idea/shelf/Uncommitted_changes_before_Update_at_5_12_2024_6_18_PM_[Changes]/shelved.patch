Index: SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/SnakeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gamecodeschool.c17snake;\r\n\r\nimport android.app.Activity;\r\nimport android.graphics.Point;\r\nimport android.os.Bundle;\r\nimport android.view.Display;\r\n\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\n\r\npublic class SnakeActivity extends Activity {\r\n\r\n    // Declare an instance of SnakeGame\r\n    public static SnakeGame mSnakeGame;\r\n    static ExecutorService executorService = Executors.newFixedThreadPool(4);\r\n\r\n    // Set the game up\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Get the pixel dimensions of the screen\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n\r\n        // Initialize the result into a Point object\r\n        Point size = new Point();\r\n        display.getSize(size);\r\n\r\n        // Create a new instance of the SnakeEngine class\r\n        mSnakeGame = new SnakeGame(this, size);\r\n\r\n        // Make snakeEngine the view of the Activity\r\n        setContentView(mSnakeGame);\r\n    }\r\n\r\n    // Start the thread in snakeEngine\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        mSnakeGame.resume();\r\n    }\r\n\r\n    // Stop the thread in snakeEngine\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        mSnakeGame.pause();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/SnakeActivity.java b/SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/SnakeActivity.java
--- a/SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/SnakeActivity.java	(revision 365710cffa6b1c9d13de234cf5f09d4b055f25dc)
+++ b/SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/SnakeActivity.java	(date 1715557224389)
@@ -11,8 +11,8 @@
 public class SnakeActivity extends Activity {
 
     // Declare an instance of SnakeGame
-    public static SnakeGame mSnakeGame;
-    static ExecutorService executorService = Executors.newFixedThreadPool(4);
+    public  SnakeGame mSnakeGame;
+    //static ExecutorService executorService = Executors.newFixedThreadPool(4);
 
     // Set the game up
     @Override
Index: SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/GameOverActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gamecodeschool.c17snake;\r\n\r\nimport android.app.Activity;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Point;\r\nimport android.os.Bundle;\r\nimport android.view.Display;\r\n\r\n\r\npublic class GameOverActivity extends Activity {\r\n\r\n    private GameOverScreen gameOverScreen;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        // Get the pixel dimensions of the screen\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        SnakeActivity.mSnakeGame.spawnHide();\r\n        SnakeActivity.mSnakeGame.resetGameState();\r\n\r\n        // Initialize the result into a Point object\r\n        Point size = new Point();\r\n        display.getSize(size);\r\n        int score = 0;\r\n\r\n        Bundle extras = getIntent().getExtras();\r\n        if (extras != null) {\r\n            score = extras.getInt(\"key\");\r\n            //The key argument here must match that used in the other activity\r\n        }\r\n\r\n        SharedPreferences sharedPref = getPreferences(MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPref.edit();\r\n        if(score > sharedPref.getInt(\"scoreKey\", 0)) {\r\n            editor.putInt(\"scoreKey\", score);\r\n            editor.apply();\r\n        }\r\n\r\n        int Highscore = sharedPref.getInt(\"scoreKey\", 0);\r\n\r\n\r\n        gameOverScreen = new GameOverScreen(this, score, Highscore);\r\n\r\n        setContentView(gameOverScreen);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        gameOverScreen.resume();\r\n    }\r\n\r\n    // Stop the thread in snakeEngine\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        gameOverScreen.pause();\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/GameOverActivity.java b/SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/GameOverActivity.java
--- a/SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/GameOverActivity.java	(revision 365710cffa6b1c9d13de234cf5f09d4b055f25dc)
+++ b/SnakeGame/app/src/main/java/com/gamecodeschool/c17snake/GameOverActivity.java	(date 1715557224382)
@@ -16,8 +16,8 @@
 
         // Get the pixel dimensions of the screen
         Display display = getWindowManager().getDefaultDisplay();
-        SnakeActivity.mSnakeGame.spawnHide();
-        SnakeActivity.mSnakeGame.resetGameState();
+        //SnakeActivity.mSnakeGame.spawnHide();
+        //SnakeActivity.mSnakeGame.resetGameState();
 
         // Initialize the result into a Point object
         Point size = new Point();
